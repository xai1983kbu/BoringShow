import 'dart:convert';
import 'package:flutter_test/flutter_test.dart';
import 'package:hnews/src/article.dart';
import 'package:http/http.dart' as http;

void main() {
  test("parses topStories.json", () {
    const jsonString = "[ 19765993, 19765019, 19765650, 19765350, 19765959, 19763276, 19764896, 19756590, 19755084, 19756216, 19763435, 19751872, 19764430, 19766105, 19755156, 19764892, 19763891, 19764735, 19756125, 19763413, 19764413, 19762907, 19754940, 19765338, 19755585, 19761159, 19756108, 19757013, 19757574, 19764372, 19762928, 19747306, 19762622, 19765866, 19764329, 19759485, 19761952, 19745741, 19755209, 19764916, 19756646, 19763576, 19755032, 19758848, 19756505, 19752317, 19764511, 19762955, 19765738, 19756123, 19764845, 19759101, 19756353, 19762466, 19743953, 19763386, 19759630, 19758261, 19751993, 19749767, 19764224, 19764023, 19757225, 19764010, 19763555, 19760004, 19760377, 19758395, 19752428, 19758126, 19764912, 19761836, 19761687, 19743679, 19754720, 19751526, 19757911, 19761183, 19760421, 19756094, 19742880, 19760029, 19759491, 19742355, 19753814, 19758129, 19753989, 19760718, 19749699, 19748310, 19760368, 19763244, 19760449, 19744378, 19758096, 19742868, 19756609, 19742478, 19762081, 19740304, 19753428, 19742599, 19753282, 19742188, 19759622, 19746424, 19746122, 19754103, 19752293, 19759081, 19747706, 19763702, 19761793, 19756487, 19750271, 19742603, 19765572, 19755590, 19750491, 19759454, 19750095, 19740426, 19753805, 19753470, 19756041, 19755536, 19755607, 19759512, 19756093, 19759172, 19752699, 19752376, 19743480, 19748319, 19759490, 19764850, 19760367, 19764004, 19751172, 19753418, 19761019, 19741408, 19747777, 19764095, 19759039, 19750196, 19763330, 19748939, 19759632, 19753537, 19750610, 19762075, 19746440, 19763447, 19756435, 19756390, 19745901, 19740923, 19755611, 19754696, 19741976, 19742468, 19740489, 19746465, 19746707, 19747493, 19762131, 19744513, 19760080, 19764549, 19742740, 19747750, 19757683, 19742929, 19742784, 19755886, 19752161, 19742270, 19757202, 19757941, 19750784, 19747001, 19747652, 19742247, 19746038, 19751089, 19746016, 19744558, 19762503, 19760439, 19761208, 19752028, 19746336, 19743392, 19748109, 19760921, 19752774, 19742875, 19751552, 19743879, 19757797, 19746533, 19759543, 19742435, 19741320, 19758807, 19753772, 19760864, 19740545, 19760086, 19763106, 19750507, 19752178, 19744221, 19746750, 19752370, 19754851, 19762527, 19763709, 19760727, 19749717, 19752585, 19752534, 19758735, 19750278, 19757156, 19747529, 19758828, 19743976, 19749069, 19756110, 19741389, 19750014, 19758156, 19743428, 19747821, 19741837, 19747811, 19741942, 19756075, 19761583, 19755498, 19742328, 19746392, 19754907, 19744397, 19740768, 19749130, 19756629, 19742038, 19741058, 19742258, 19756376, 19762235, 19746348, 19746382, 19763047, 19742795, 19763021, 19754357, 19762206, 19758169, 19756067, 19757059, 19757987, 19758892, 19761998, 19750333, 19761903, 19756346, 19752109, 19739865, 19752506, 19761728, 19754424, 19761347, 19742151, 19743823, 19755363, 19750894, 19761043, 19742255, 19757026, 19750358, 19755175, 19746734, 19743701, 19750764, 19740052, 19761983, 19747048, 19756085, 19761900, 19747649, 19760530, 19755466, 19752533, 19743472, 19753098, 19762856, 19755976, 19752782, 19761907, 19754255, 19742162, 19745365, 19744741, 19741501, 19746793, 19744726, 19764022, 19742871, 19755176, 19762315, 19760617, 19760616, 19762256, 19742353, 19760363, 19746072, 19758150, 19744131, 19743125, 19762044, 19750463, 19752795, 19761858, 19753148, 19759629, 19756081, 19742860, 19752208, 19755942, 19754867, 19752456, 19742503, 19754291, 19751715, 19749686, 19746972, 19758982, 19745267, 19739952, 19751069, 19744711, 19753091, 19749763, 19750273, 19760879, 19749859, 19741204, 19742718, 19747831, 19760305, 19753677, 19751279, 19755096, 19760028, 19747768, 19747326, 19749938, 19749781, 19754667, 19747692, 19754520, 19743220, 19755588, 19752056, 19742469, 19758270, 19745809, 19757816, 19741193, 19747003, 19752091, 19753295, 19744657, 19748487, 19750594, 19751857, 19756616, 19750904, 19743197, 19747512, 19751679, 19750557, 19749675, 19753515, 19753453, 19750304, 19743089, 19742932, 19754653, 19749915, 19741523, 19746079, 19741239, 19740827, 19740702, 19751987, 19748966, 19746706, 19742252, 19739872, 19748515, 19743109, 19750383, 19753287, 19753006, 19742691, 19744120, 19750667, 19751580, 19740497, 19750708, 19747841, 19754064, 19750175, 19743380, 19749815, 19748947, 19742301, 19744320, 19753392, 19748288, 19756921, 19741730, 19747714, 19752878, 19743378, 19740045, 19743006, 19752295, 19752653, 19752147, 19751438, 19751423, 19748083, 19750409, 19749993, 19743189, 19745562, 19742561, 19743764, 19745088, 19743510, 19742011, 19748236, 19747962, 19747840, 19741194, 19740535, 19747634, 19740349, 19744146, 19754490, 19744007, 19758373, 19743743, 19741250, 19743564, 19743517, 19740140, 19743074, 19742781, 19746120, 19746060, 19742422, 19746011, 19742087, 19753123, 19740439, 19749236, 19743064, 19742632, 19742552, 19742169, 19741789, 19741606, 19741487, 19742648, 19750646, 19740488, 19748020, 19746643, 19765375, 19746002, 19751128, 19742211, 19750652, 19763546, 19762811, 19763966, 19754982, 19747077, 19758089, 19753932, 19759264, 19759666, 19752205 ]";

    expect(parseTopStories(jsonString).first, 19765993);
  });

  test("parses item.json", () {
    const jsonString =
    """{
      "by" : "dhouston",
      "descendants" : 71,
      "id" : 8863,
      "kids" : [ 9224, 8917, 8952, 8884, 8887, 8869, 8958, 8940, 8908, 9005, 8873, 9671, 9067, 9055, 8865, 8881, 8872, 8955, 10403, 8903, 8928, 9125, 8998, 8901, 8902, 8907, 8894, 8870, 8878, 8980, 8934, 8943, 8876 ],
      "score" : 104,
      "time" : 1175714200,
      "title" : "My YC app: Dropbox - Throw away your USB drive",
      "type" : "story",
      "url" : "http://www.getdropbox.com/u/2/screencast.html"
    }""";
    expect(parseArticle(jsonString).by, "dhouston");
  });

  test("parses item.json over a network", () async {
    final url = 'https://hacker-news.firebaseio.com/v0/beststories.json';
    final res = await http.get(url);
    if (res.statusCode == 200) {
      final idList = parseTopStories(res.body);
      if (idList.isNotEmpty) {
        final storyUrl =
            'https://hacker-news.firebaseio.com/v0/item/${idList.first}.json';
        final storyRes = await http.get(storyUrl);
        if (storyRes.statusCode == 200) {
          expect(parseArticle(storyRes.body), isNotNull);
        }
      }
    }
  }, skip: true);
}